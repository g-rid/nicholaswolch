:root {
  --mouse-x: 0px;
  --mouse-y: 0px;
  // --random-
}

@mixin gutter-spacing($box) {
  top: calc(var(--gutter-spacing) * $box);
  right: calc(var(--gutter-spacing) * $box);
  bottom: calc(var(--gutter-spacing) * $box);
  left: calc(var(--gutter-spacing) * $box);
}

.background-animation {
  position: fixed;
  top: var(--gutter-spacing);
  right: var(--gutter-spacing);
  bottom: var(--gutter-spacing);
  left: var(--gutter-spacing);
  transition: 0s ease-in-out;
  overflow: hidden;
  .background-box {
    position: absolute;
    transition: 1s ease;
    &:nth-child(even) {
      background-color: var(--primary-color);
    }
    &:nth-child(odd) {
      background-color: var(--secondary-color);
    }
    &.box-1 {
      @include gutter-spacing(1);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.1));
    }
    &.box-2 {
      @include gutter-spacing(2);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.2));
      // transform: rotate3d(2, -1, -1, -0.2turn);
    }
    &.box-3 {
      @include gutter-spacing(3);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.3));
      // transform: rotate3d(0, 1, 0.5, 3.142rad);
    }
    &.box-4 {
      @include gutter-spacing(4);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.4));
    }
    &.box-5 {
      @include gutter-spacing(5);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.5));
    }
    &.box-6 {
      @include gutter-spacing(6);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.6));
    }
    &.box-7 {
      @include gutter-spacing(7);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.7));
    }
    &.box-8 {
      @include gutter-spacing(8);
      transform: perspective(3000px) rotateZ(calc(var(--mouse-x) * 1.8));
    }
  }
}
